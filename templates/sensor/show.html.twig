{% extends 'base.html.twig' %}

{% block title %}Sensor{% endblock %}

{% block body %}
    <style>
        canvas {
            -moz-user-select: none;
            -webkit-user-select: none;
            -ms-user-select: none;
        }
    </style>
    <h4>Sensor</h4>
    {#<a href="{{ path('sensor_index') }}">back to list</a>#}

    <a href="{{ path('sensor_edit', {'id': sensor.id}) }}">edit</a>
    <table class="table">
        <tbody>
            <tr>
                <th>Id</th>
                <td>{{ sensor.id }}</td>
            </tr>
            <tr>
                <th>Name</th>
                <td>{{ sensor.name }}</td>
            </tr>
            <tr>
                <th>UniqId</th>
                <td>{{ sensor.uniqId }}</td>
            </tr>
            <tr>
                <th>Type</th>
                <td>{{ sensor.eventType | parseType }}</td>
            </tr>
        </tbody>
    </table>
    <canvas id="myChart" width="400" height="100"></canvas>
    <script>
        var color = Chart.helpers.color;
        var my_color = window.chartColors.red;
        var fill_val = false;
        {%  set type = sensor.eventType | parseType %}
        {% if type == 'Humidity' %}
            my_color = window.chartColors.yellow;
            fill_val = true;
        {% endif %}
        {% if type == 'Temperature' %}
            my_color = window.chartColors.blue;
        {% endif %}
        var config = {
            type: 'line',
            data: {
                datasets: [{
                    label: '{{ sensor.name }}',
                    backgroundColor: color(my_color).alpha(0.25).rgbString(),
                    borderColor: my_color,
                    fill: fill_val,
                    pointRadius: 5,
                    // lineTension: 0,
                    borderWidth: 2,
                    data: [
                        {% set break = false %}
                        {% set counter = 0 %}
                        {% for event in sensor.events  if not break%}
                        {% if counter == 2000 %}
                        {% set break = true %}
                        {% endif %}
                        {% set counter = counter+1 %}
                        {
                            x: '{{ event.createdAt|date('Y-m-d H:i:s+03:00') }}',
                            y: {{ event.value }},
                        },
                        {% endfor %}
                    ],
                }
                // , {
                //     label: 'Dataset with date object point data',
                //     backgroundColor: color(window.chartColors.blue).alpha(0.5).rgbString(),
                //     borderColor: window.chartColors.blue,
                //     fill: false,
                //     data: [{
                //         x: newDate(0),
                //         y: randomScalingFactor()
                //     }, {
                //         x: newDate(2),
                //         y: randomScalingFactor()
                //     }, {
                //         x: newDate(4),
                //         y: randomScalingFactor()
                //     }, {
                //         x: newDate(5),
                //         y: randomScalingFactor()
                //     }]
                // }
                ]
            },
            options: {
                responsive: true,
                title: {
                    display: true,
                    text: '{{ type }} [{{ sensor.name }}]'
                },
                scales: {
                    xAxes: [{
                        type: 'time',
                        display: true,
                        // distribution: 'series',
                        scaleLabel: {
                            display: true,
                            labelString: 'Date'
                        },
                        ticks: {
                            source: 'data',
                            autoSkip: true,
                            major: {
                                fontStyle: 'bold',
                                fontColor: '#FF0000'
                            }
                        }
                    }],
                    yAxes: [{
                        display: true,
                        scaleLabel: {
                            display: true,
                            labelString: 'value'
                        }
                    }]
                },
                tooltips: {
                    intersect: false,
                    mode: 'index',
                    callbacks: {
                        label: function(tooltipItem, myData) {
                            var label = myData.datasets[tooltipItem.datasetIndex].label || '';
                            if (label) {
                                label += ': ';
                            }
                            label += parseFloat(tooltipItem.value).toFixed(2);
                            return label;
                        }
                    }
                }
            }
        };

        window.onload = function() {
            var ctx = $('#myChart');
            window.myLine = new Chart(ctx, config);
        };
        //
        // document.getElementById('randomizeData').addEventListener('click', function() {
        //     config.data.datasets.forEach(function(dataset) {
        //         dataset.data.forEach(function(dataObj) {
        //             dataObj.y = randomScalingFactor();
        //         });
        //     });
        //
        //     window.myLine.update();
        // });
        // document.getElementById('addData').addEventListener('click', function() {
        //     if (config.data.datasets.length > 0) {
        //         config.data.datasets[0].data.push({
        //             x: newDateString(config.data.datasets[0].data.length + 2),
        //             y: randomScalingFactor()
        //         });
        //         config.data.datasets[1].data.push({
        //             x: newDate(config.data.datasets[1].data.length + 2),
        //             y: randomScalingFactor()
        //         });
        //
        //         window.myLine.update();
        //     }
        // });
        //
        // document.getElementById('removeData').addEventListener('click', function() {
        //     config.data.datasets.forEach(function(dataset) {
        //         dataset.data.pop();
        //     });
        //
        //     window.myLine.update();
        // });
    </script>
    <hr/>
    <h5>Events {{ sensor.events | length }}</h5>
    <table class="table">
        <thead>
        <tr>
            <th>ID</th>
            <th>Name</th>
            <th>Type</th>
            <th>Value</th>
            <th>Note</th>
            <th>Created</th>
            <th>Updated</th>
        </tr>
        </thead>
        <tbody>
        {% set break = false %}
        {% set counter = 0 %}
        {% for event in sensor.events  if not break%}
            {% if counter == 100 %}
                {% set break = true %}
            {% endif %}
            {% set counter = counter+1 %}
            <tr>

                <td>{{ event.id }}</td>
                <td>{{ event.name }}</td>
                <td>{{ event.type }}</td>
                <td>{{ event.value }}</td>
                <td>{{ event.note }}</td>
                <td>{{ event.createdAt |date('Ymd H:i:s')}}</td>
                <td>{{ event.updatedAt |date('Ymd H:i:s')}}</td>
            </tr>
        {% endfor %}
        </tbody>
    </table>


    {#{{ include('sensor/_delete_form.html.twig') }}#}
{% endblock %}
