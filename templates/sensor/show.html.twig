{% extends 'base.html.twig' %}

{% block title %}Sensor{% endblock %}

{% block body %}
    <style>
        canvas {
            -moz-user-select: none;
            -webkit-user-select: none;
            -ms-user-select: none;
        }
    </style>
    <h4>Sensor {{ sensor.eventType | parseType }} [{{ sensor.id }}] </h4>
    {#<a href="{{ path('sensor_index') }}">back to list</a>#}
    <table class="table">
        <tbody>
            <tr>
                <th>Name</th>
                <th>Plant</th>
                <th>Events</th>
                <th>Updated</th>
                <th>Options</th>
                <th>TH</th>
                <th>Force S</th>
                <th>Type</th>
                <th>Unique</th>
            </tr>
            <tr>
                <td>{{ sensor.name }}</td>
                <td><a href="{{ path('plant_show', {'id': sensor.plant.id}) }}">{{ sensor.plant.name }}</a></td>
                <td>{{ sensor.events | length }}</td>
                <td>{{ sensor.updatedAt | time_diff}}</td>
                <td><a href="{{ path('sensor_edit', {'id': sensor.id}) }}">edit</a></td>
                <td>{{ sensor.diffThreshold }}</td>
                <td>{{ sensor.writeForceEveryXseconds }}</td>
                <td>{{ sensor.eventType }}</td>
                <td>{{ sensor.uniqId }}</td>

            </tr>
        </tbody>
    </table>
    <canvas id="graph_container" style="width: 100%;height: 400px !important;"></canvas>
    <table style="width: 99%">
        <tr>
            <td>
                <button id="toggleScale">Toggle Scale Type</button>
            </td>
            <td style="text-align: center">
                <div id="changeTime">
                    <button class="button" type="button" value="1">1 Hour</button>
                    <button class="button" type="button" value="3">3 H</button>
                    <button class="button" type="button" value="6">6 H</button>
                    <button class="button" type="button" value="12">12 H</button>
                    <button class="button" type="button" value="24">24 H</button>
                    &nbsp;| &nbsp;
                    <button class="button" type="button" value="36">36 Hours</button>
                    &nbsp;| &nbsp;
                    <button class="button" type="button" value="48">2 Days</button>
                    <button class="button" type="button" value="72">3 D</button>
                    <button class="button" type="button" value="96">4 D</button>
                    <button class="button" type="button" value="130">5 D</button>
                    &nbsp;| &nbsp;
                    <button class="button" type="button" value="170">1 Week</button>
                    <button class="button" type="button" value="340">2 W</button>
                    &nbsp;| &nbsp;
                    <button class="button" type="button" value="731">1 Month</button>
                    <button class="button" type="button" value="1461">2 M</button>
                    <button class="button" type="button" value="2191">3 M</button>
                    <button class="button" type="button" value="2921">4 M</button>
                    <button class="button" type="button" value="4381">6 M</button>
                    &nbsp;| &nbsp;
                    <button class="button" type="button" value="8761">1 Y</button>
                </div>
            </td>
            <td style="text-align: right;">
                <a href="{{ path('event_new') }}">Create new Event</a>
            </td>
        </tr>
    </table>
    <script>
        $( document ).ready(function() {
            $('#changeTime').on('click','button', function (evt) {
                // //-- do stuff
                // console.log(evt);
                // console.log(this);
                // console.log(this.value);
                window.location = '{{ path('sensor_show', {'id': sensor.id}) }}/hours/' + this.value;
            });
            var ctx = $('#graph_container');
            window.myLine = new Chart(ctx, config);
        });

        var color = Chart.helpers.color;
        var my_color = window.chartColors.red;
        var fill_val = false;
        {%  set type = sensor.eventType | parseType %}
        {% if type == 'Humidity' %}
            my_color = window.chartColors.yellow;
            fill_val = true;
        {% endif %}
        {% if type == 'Temperature' %}
            my_color = window.chartColors.blue;
        {% endif %}
        {% if type == 'SoilHydrometer' %}
        my_color = window.chartColors.green;
        {% endif %}
        var config = {
            type: 'line',
            data: {
                datasets: [{
                    label: '{{ sensor.name }}',
                    backgroundColor: color(my_color).alpha(0.25).rgbString(),
                    borderColor: my_color,
                    fill: fill_val,
                    pointRadius: 5,
                    // lineTension: 0,
                    borderWidth: 2,
                    data: [{% for event in events | slice(0, 2000) %}
                        {x: '{{ event.createdAt|date('Y-m-d H:i') }}', y: {{ event.value }}, z: '{{ event.name}}'},{% endfor %}],
                }
                ]
            },
            options: {
                responsive: true,
                title: {
                    display: true,
                    text: '{{ type }} [{{ sensor.name }}] {{ hours }} hours'
                },
                scales: {
                    xAxes: [{
                        type: 'time',
                        display: true,
                        time: {
                            unit: 'quarter',
                            displayFormats: {
                                quarter: 'D/M H:mm'  // https://www.chartjs.org/docs/latest/axes/cartesian/time.html
                            }
                        },
                        distribution: 'linear',
                        scaleLabel: {
                            display: true,
                            labelString: 'Date'
                        },
                        ticks: {
                            source: 'data',  // add timeprint on bottom for each points
                            autoSkip: true,
                            major: {
                                fontStyle: 'bold',
                                fontColor: '#FF0000'
                            }
                        }
                    }],
                    yAxes: [{
                        display: true,
                        scaleLabel: {
                            display: true,
                            labelString: 'value'
                        }
                    }]
                },
                tooltips: {
                    intersect: false,
                    mode: 'single',
                    callbacks: {
                        label: function(tooltipItem, myData) {
                            var label = myData.datasets[tooltipItem.datasetIndex].label || '';
                            if (label) {
                                label += '  :  ';
                            }
                            label += parseFloat(tooltipItem.value).toFixed(2);
                            // try {
                            //     var eventName = myData.datasets[tooltipItem.datasetIndex].data[tooltipItem.index].z;
                            //     if (eventName.length > 0) {
                            //         label = [label];
                            //         label.push(eventName);
                            //     }
                            // }  catch (e) {
                            // }
                            return label;
                        },
                        afterBody: function(data, myData) {
                            var ret = '';
                            try{
                                var eventName = myData.datasets[data[0].datasetIndex].data[data[0].index].z;
                                var multistringText = [''];
                                multistringText.push(eventName);
                                ret =  multistringText;
                            } catch (e) {

                            }
                            return ret;
                        },
                    }
                }
            }
        };
    </script>
    <hr/>
    <h5>Events showed {{ events | length }} limit is 10000</h5>
    <table class="table table-hover table-striped table-condensed tasks-table table-bordered">
        <thead>
        <tr>
            <th>ID</th>
            <th>Name</th>
            <th>Type</th>

            {% if sensor.eventType | parseType == 'Humidity' %}
                <th>Humidity</th>
                <th>Absolute humidity</th>
                <th>Temperature</th>
                <th>Heat Index</th>
                <th>(Humidity-Absolute humidity)</th>
            {% else %}
                <th>Value</th>
                <th>Value 1</th>
                <th>Value 2</th>
                <th>Value 3</th>
            {% endif %}
            <th>Note</th>
            <th>IP</th>
            <th>Created</th>
            {#<th>Created</th>#}
            <th>Updated</th>
            {#<th>PlantID</th>#}
        </tr>
        </thead>
        <tbody>
        {% for event in events | slice(0, 10000) %}
            {% set type = event.type| parseType  %}
            <tr>
                <td><a href="{{ path('event_show', {'id': event.id}) }}">{{ event.id }}</td>
                <td>{{ event.name }}</td>
                <td>{{ type }}</td>
                <td>
                    {% set _value = event.value %}
                    {% if type == 'Humidity' %}
                        <span class="badge {{ humidityToBadge(_value)}}">{{ _value }} %</span>
                    {% elseif type == 'Temperature' %}
                        <span class="badge badge-pill {{ temperatureToBadge(_value)}}">{{ _value }} &#8451;</span>
                    {% else %}
                        {{ _value }}
                    {% endif %}
                </td>
                <td class="font10">
                    {% if sensor.lastEvent.value1 is defined %}
                        {% set _value1 = sensor.lastEvent.value1 %}
                        {% if _value1 is not null %}
                            {% if type == 'Humidity' %}
                                <span title="Absolute Humidity" class="badge badge-pill {{ humidityToBadge(_value1)}}">{{ _value1 }} %</span>
                            {% else %}
                                <span class="badge  badge-pill badge-dark">{{ _value1 }}</span>
                            {% endif %}
                        {% endif %}
                    {% endif %}
                </td>
                <td class="font10">
                    {% if sensor.lastEvent.value2 is defined %}
                        {% set _value2 = sensor.lastEvent.value2 %}
                        {% if _value2 is not null %}
                            {% if type == 'Humidity' %}
                                <span title="Temperature" class="badge badge-pill {{ temperatureToBadge(_value2)}}">{{ _value2 }} &#8451;</span>
                            {% else %}
                                <span class="badge  badge-pill badge-dark">{{ _value2 }}</span>
                            {% endif %}
                        {% endif %}
                    {% endif %}
                </td>
                <td class="font10">
                    {% if sensor.lastEvent.value3 is defined %}
                        {% set _value3 = sensor.lastEvent.value3 %}
                        {% if _value3 is not null %}
                            {% if type == 'Humidity' %}
                                <span title="Heat Index" class="badge badge-pill {{ temperatureToBadge(_value3)}}">{{ _value3 }} &#8451;</span>
                            {% else %}
                                <span class="badge  badge-pill badge-dark">{{ _value3 }}</span>
                            {% endif %}
                        {% endif %}
                    {% endif %}
                </td>
                {% if sensor.eventType | parseType == 'Humidity' %}
                    <td class="font10">
                        {% if sensor.lastEvent.value1 is defined %}
                            {% set _value1 = sensor.lastEvent.value1 %}
                            {% if _value1 is not null %}
                                {% set res = _value - _value1 %}
                                {% if type == 'Humidity' %}
                                    <span title="(Humidity-Absolute humidity)" class="badge badge-pill {{ humidityToBadge(res)}}">{{ res }} %</span>
                                {% else %}
                                    <span class="badge  badge-pill badge-dark">{{ _value3 }}</span>
                                {% endif %}
                            {% endif %}
                        {% endif %}
                    </td>
                {% endif %}
                <td class="font9">{{ event.note }}</td>
                <td class="font9">{{ event.ip }}</td>
                <td class="font9">{{ event.createdAt | time_diff }}</td>
                {#<td>{{ event.createdAt |date('Ymd H:i:s')}}</td>#}
                <td class="font8">{{ event.updatedAt |date('Ymd H:i:s')}}</td>
                {#<td>{{ event.plant.id }}</td>#}
            </tr>
        {% endfor %}
        </tbody>
    </table>
    {#{{ include('sensor/_delete_form.html.twig') }}#}
{% endblock %}
